apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-app
  labels:
    app: trading-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: trading-app
  template:
    metadata:
      labels:
        app: trading-app
    spec:
      containers:
      - name: trading-app
        image: trading-app:latest
        ports:
        - containerPort: 8000
        - containerPort: 8080
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: REDIS_URL
          value: "redis://trading-redis:6379"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: database-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /app/logs
        - name: data-storage
          mountPath: /app/data
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: data-storage
        persistentVolumeClaim:
          claimName: data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: trading-service
spec:
  selector:
    app: trading-app
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: websocket
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: trading-secrets
type: Opaque
data:
  database-url: cG9zdGdyZXNxbDovL3RyYWRpbmdfdXNlcjp0cmFkaW5nX3Bhc3NAdHJhZGluZy1wb3N0Z3Jlczo1NDMyL3RyYWRpbmdfZGI=
  api-key: eW91ci1hcGkta2V5LWhlcmU=
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trading-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: trading.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trading-service
            port:
              number: 80
  tls:
  - hosts:
    - trading.example.com
    secretName: trading-tls 